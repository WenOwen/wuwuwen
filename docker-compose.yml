version: '3.8'

services:
  # AI预测系统主服务
  stock-prediction:
    build: .
    ports:
      - "8000:8000"  # FastAPI服务
      - "8501:8501"  # Streamlit界面
    volumes:
      - ./datas_em:/app/datas_em
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - DB_PATH=/app/data/performance.db
    depends_on:
      - redis
    restart: unless-stopped
    command: >
      sh -c "
        uvicorn prediction_service:app --host 0.0.0.0 --port 8000 &
        streamlit run streamlit_app.py --server.port 8501 --server.address 0.0.0.0
      "

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # 数据更新服务
  data-updater:
    build: .
    volumes:
      - ./datas_em:/app/datas_em
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
    depends_on:
      - redis
    restart: unless-stopped
    command: python data_updater.py

  # 性能监控服务
  monitor:
    build: .
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - DB_PATH=/app/data/performance.db
    depends_on:
      - redis
    restart: unless-stopped
    command: python monitor_daemon.py

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - stock-prediction
    restart: unless-stopped

volumes:
  redis_data:
  
networks:
  default:
    driver: bridge