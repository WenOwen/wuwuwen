# LightGBM 训练配置文件
# 基于时序股票数据的机器学习训练配置
#
# 使用说明：
# 1. 首先运行数据处理脚本 '股板指情数据汇总处理_简洁版.py' 生成训练数据
# 2. 将下面的 data_dir 路径修改为数据处理脚本的输出目录
# 3. 确保输出目录包含以下文件：
#    - X_features.csv (特征数据)
#    - y_targets.csv (目标数据) 
#    - full_data.csv (完整数据，可选)
#    - stock_codes.json (股票代码信息)
#    - data_info.json (数据处理信息)
# 4. 运行训练脚本: python lightgbm_train.py --config config/train/lightGBM_train.yaml
#
# 文件结构说明：
# 每次训练会创建独立的文件夹(如training_001, training_002...)来存放所有相关文件：
# ./models/lightgbm/training_001/    - 模型文件
#   ├── lightgbm_stock_model.pkl     - 训练好的模型
#   ├── scaler.pkl                   - 数据标准化器
#   ├── feature_names.json           - 详细特征名称信息
#   └── feature_names_simple.txt     - 简单特征名称列表
# ./results/lightgbm/training_001/   - 结果文件
#   ├── metrics.json                 - 评估指标
#   ├── predictions.csv              - 预测结果
#   ├── feature_importance.csv       - 特征重要性（详细）
#   └── top_features.txt             - 前20个重要特征（可视化）
# 这样避免了文件混乱，便于管理不同训练版本的结果
# 
# 新增功能：
# 1. 时序窗口数据处理：专门针对step_XX_格式的滑动窗口数据进行处理和验证
# 2. 真实特征名称：从CSV列名获取并保存真实的特征名称，便于特征分析和修正
# 3. 智能数据结构识别：自动识别时序窗口格式，进行相应的数据处理
# 4. 时序技术指标：基于时序窗口数据计算移动平均、RSI、动量等技术指标

# ===========================================
# 数据配置
# ===========================================
data:
  # 数据路径配置
  # 请根据实际情况修改data_dir路径，这是数据处理脚本生成的输出目录
  # 例如: "./data/processed/processed_20250115_120000"
  data_dir: "./data/datas_processed/processed_20250810_154721"
  
  # 数据文件名称 (CSV格式)
  X_features_file: "X_features.csv"        # 特征数据文件
  y_targets_file: "y_targets.csv"          # 目标数据文件
  full_data_file: "full_data.csv"          # 完整数据文件 (特征+目标+股票代码)
  stock_codes_file: "stock_codes.json"     # 股票代码信息文件
  data_info_file: "data_info.json"         # 数据处理信息文件
  
  # 数据加载选项
  loading_options:
    # 优先使用完整数据文件，如果为false则分别加载特征和目标文件
    prefer_full_data: true
    # 数据文件编码
    encoding: "utf-8"
    # 是否验证数据完整性
    validate_data: true
    
  # 时序窗口数据选项（针对step_XX_格式的滑动窗口数据）
  timeseries_window:
    # 是否验证时序窗口数据的完整性
    validate_completeness: true
    # 最小样本数阈值（每只股票最少需要的样本数）
    min_samples_per_stock: 5
    # 是否显示窗口结构分析信息
    show_window_analysis: true
  
  # 数据预处理
  preprocessing:
    # 时序数据处理方式: 'flatten', 'statistical', 'last_step'
    timeseries_method: "statistical"
    
    # 特征工程
    feature_engineering:
      # 统计特征 (当使用statistical方法时)
      statistical_features:
        - "mean"      # 均值
        - "std"       # 标准差
        - "max"       # 最大值
        - "min"       # 最小值
        - "skew"      # 偏度
        - "kurtosis"  # 峰度
        - "median"    # 中位数
        
      # 技术指标特征
      technical_features:
        enabled: true
        features:
          - "momentum"     # 动量特征
          - "volatility"   # 波动率特征
          - "trend"        # 趋势特征
    
    # 数据标准化
    normalization:
      method: "standard"  # "standard", "minmax", "robust", null
      
    # 异常值处理
    outlier_handling:
      enabled: true
      method: "iqr"  # "iqr", "zscore", "isolation_forest"
      threshold: 3.0

# ===========================================
# 训练配置
# ===========================================
training:
  # 数据分割
  data_split:
    test_size: 0.2
    validation_size: 0.1
    random_state: 42
    stratify: false
    
  # 交叉验证
  cross_validation:
    enabled: true
    cv_folds: 5
    cv_strategy: "time_series"  # "kfold", "time_series", "stratified"
    
  # 训练参数
  training_params:
    early_stopping_rounds: 100
    verbose: 100
    eval_metric: ["rmse", "mae"]

# ===========================================
# LightGBM 模型参数
# ===========================================
lightgbm:
  # 基础参数
  basic_params:
    objective: "regression"     # 任务类型: "regression", "binary", "multiclass"
    metric: "rmse"
    boosting_type: "gbdt"       # "gbdt", "dart", "goss"
    num_leaves: 31
    learning_rate: 0.1
    feature_fraction: 0.9
    bagging_fraction: 0.8
    bagging_freq: 5
    verbose: -1
    random_state: 42
    
  # 进阶参数
  advanced_params:
    max_depth: -1
    min_data_in_leaf: 20
    min_gain_to_split: 0.0
    lambda_l1: 0.0
    lambda_l2: 0.0
    min_data_in_bin: 3
    bin_construct_sample_cnt: 200000
    
  # 训练参数
  fit_params:
    num_boost_round: 1000
    categorical_feature: "auto"

# ===========================================
# 特征选择
# ===========================================
feature_selection:
  enabled: true
  methods:
    # 基于重要性的选择
    importance_based:
      enabled: true
      threshold: 0.001  # 重要性阈值
      
    # 基于相关性的选择
    correlation_based:
      enabled: true
      threshold: 0.95   # 相关性阈值
      
    # 递归特征消除
    rfe:
      enabled: false
      n_features_to_select: 100

# ===========================================
# 超参数优化
# ===========================================
hyperparameter_tuning:
  enabled: true
  method: "optuna"  # "optuna", "grid_search", "random_search"
  
  # Optuna 配置
  optuna_config:
    n_trials: 20  # 减少试验次数，便于测试进度条
    timeout: 1800  # 30分钟
    
    # 参数搜索空间
    param_ranges:
      num_leaves: [10, 300]
      learning_rate: [0.01, 0.3]
      feature_fraction: [0.4, 1.0]
      bagging_fraction: [0.4, 1.0]
      min_data_in_leaf: [10, 100]
      lambda_l1: [0.0, 10.0]
      lambda_l2: [0.0, 10.0]

# ===========================================
# 输出配置
# ===========================================
output:
  # 文件命名配置
  file_naming:
    # 文件标识符类型: "unique_id" (001, 002...) 或 "timestamp" (20240101_120000)
    identifier_type: "unique_id"
    # 唯一标识符位数 (仅当identifier_type为unique_id时有效)
    unique_id_digits: 3
    # 训练文件夹名称前缀 (结果: training_001, training_002...)
    folder_name_prefix: "training"
    # 是否在日志中显示标识符
    show_id_in_log: true
  
  # 模型保存
  model_save:
    save_dir: "./models/lightgbm"
    model_name: "lightgbm_stock_model"
    save_format: ["pkl", "txt"]  # "pkl", "txt", "json"
    
  # 结果保存
  results_save:
    save_dir: "./results/lightgbm"
    save_predictions: true
    save_feature_importance: true
    save_metrics: true
    save_plots: true
    
  # 日志配置
  logging:
    log_level: "INFO"
    log_file: "./logs/lightgbm_training.log"
    console_output: true

# ===========================================
# 评估配置
# ===========================================
evaluation:
  # 评估指标
  metrics:
    - "rmse"
    - "mae"
    - "mape"
    - "r2_score"
    - "explained_variance"
    
  # 可视化
  visualization:
    enabled: true
    plots:
      - "feature_importance"
      - "prediction_vs_actual"
      - "residuals"
      - "learning_curve"
      - "validation_curve"

# ===========================================
# 其他配置
# ===========================================
misc:
  # 并行计算
  n_jobs: -1
  
  # 内存优化
  memory_optimization:
    enabled: true
    chunk_size: 10000
    
  # 随机种子
  random_seed: 42
  
  # GPU 支持
  gpu_config:
    enabled: false
    device_type: "cuda"  # "cuda", "opencl"