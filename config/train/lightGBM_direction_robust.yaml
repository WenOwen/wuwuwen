# LightGBM 涨跌方向预测配置文件 - 防过拟合版本
# 预测任务：看多（上涨）vs 看空（下跌）
# 针对过拟合优化的参数配置

# ===========================================
# 数据配置
# ===========================================
data:
  # 数据路径配置 - 直接指向professional_parquet
  data_dir: "./data/professional_parquet"
  
  # 直接训练选项
  direct_training:
    enabled: true                    # 启用直接训练模式
    data_format: "parquet"          # 数据格式
    stock_name_column: "name"       # 股票名称列
    target_column: "涨跌幅"          # 用于创建方向预测目标
    prediction_mode: "direction"    # 🎯 预测模式：direction(方向) 或 regression(回归)
    exclude_columns:                # 排除的列（非特征列）
      - "name"                      # 股票名称（文本）
      - "symbol"                    # 股票代码（标识符）
    
  # 数据加载选项
  loading_options:
    encoding: "utf-8"
    validate_data: true
    
  # 数据预处理（增强版）
  preprocessing:
    # 数据标准化（使用更稳健的方法）
    normalization:
      method: "robust"  # robust标准化对异常值更鲁棒
      
    # 异常值处理（更严格）
    outlier_handling:
      enabled: true
      method: "winsorize"
      winsorize_limits: [0.02, 0.02]  # 更严格的2%和98%分位数截断

# ===========================================
# 训练配置（防过拟合优化）
# ===========================================
training:
  # 数据分割
  data_split:
    test_size: 0.2
    validation_size: 0.15           # 🔧 增加验证集比例
    random_state: 42
    stratify: true                  # 分类任务使用分层抽样
    time_series_split: true         # 时间序列分割
    
  # 训练参数（防过拟合）
  training_params:
    early_stopping_rounds: 50       # 🔧 减少early stopping轮数，更早停止
    verbose: 50
    eval_metric: ["auc", "binary_logloss"]

# ===========================================
# LightGBM 模型参数（防过拟合优化）
# ===========================================
lightgbm:
  # 基础参数
  basic_params:
    objective: "binary"             # 二分类任务
    metric: "auc"                   # AUC指标
    boosting_type: "gbdt"
    num_leaves: 31                  # 🔧 减少叶子数量（原63→31）
    learning_rate: 0.03             # 🔧 降低学习率（原0.05→0.03）
    feature_fraction: 0.7           # 🔧 降低特征采样率（原0.8→0.7）
    bagging_fraction: 0.7           # 🔧 降低样本采样率（原0.8→0.7）
    bagging_freq: 3                 # 🔧 增加bagging频率
    verbose: -1
    random_state: 42
    
  # 进阶参数（增强正则化）
  advanced_params:
    max_depth: 5                    # 🔧 限制最大深度（原6→5）
    min_data_in_leaf: 100           # 🔧 增加叶子节点最小样本数（原50→100）
    min_gain_to_split: 0.2          # 🔧 增加分裂最小增益（原0.1→0.2）
    lambda_l1: 0.2                  # 🔧 增加L1正则化（原0.1→0.2）
    lambda_l2: 0.2                  # 🔧 增加L2正则化（原0.1→0.2）
    min_data_in_bin: 5              # 🔧 增加分箱最小样本数
    bin_construct_sample_cnt: 100000 # 🔧 减少分箱构建样本数
    max_bin: 255                    # 🔧 限制最大分箱数
    
  # 训练参数
  fit_params:
    num_boost_round: 500            # 🔧 减少最大迭代数（原1000→500）

# ===========================================
# 特征选择（增强版）
# ===========================================
feature_selection:
  enabled: true
  methods:
    # 基于重要性的选择
    importance_based:
      enabled: true
      threshold: 0.002              # 🔧 提高重要性阈值
      
    # 基于相关性的选择
    correlation_based:
      enabled: true
      threshold: 0.90               # 🔧 更严格的相关性阈值

# ===========================================
# 超参数优化（可选）
# ===========================================
hyperparameter_tuning:
  enabled: false

# ===========================================
# 输出配置
# ===========================================
output:
  file_naming:
    identifier_type: "unique_id"
    unique_id_digits: 3
    folder_name_prefix: "direction_robust"  # 🔧 区别于普通版本
    show_id_in_log: true
  
  model_save:
    save_dir: "./models/lightgbm_direction_robust"
    model_name: "lightgbm_direction_robust_model"
    save_format: ["pkl"]
    
  results_save:
    save_dir: "./results/lightgbm_direction_robust"
    save_predictions: true
    save_feature_importance: true
    save_metrics: true
    
  logging:
    log_level: "INFO"
    log_file: "./logs/lightgbm_direction_robust_training.log"
    console_output: true

# ===========================================
# 评估配置（二分类）
# ===========================================
evaluation:
  metrics:
    - "auc"                         # AUC-ROC
    - "accuracy"                    # 准确率
    - "precision"                   # 精确率
    - "recall"                      # 召回率
    - "f1_score"                    # F1分数
    - "log_loss"                    # 对数损失

# ===========================================
# 其他配置
# ===========================================
misc:
  n_jobs: -1
  memory_optimization:
    enabled: true
    chunk_size: 8000                # 🔧 减少chunk大小
  random_seed: 42

# ===========================================
# 防过拟合策略说明
# ===========================================
# 1. 模型复杂度控制：
#    - num_leaves: 63→31 (减少模型复杂度)
#    - max_depth: 6→5 (限制树深度)
#    - min_data_in_leaf: 50→100 (增加叶子节点样本数)
#
# 2. 正则化增强：
#    - lambda_l1: 0.1→0.2 (增加L1正则化)
#    - lambda_l2: 0.1→0.2 (增加L2正则化)
#    - min_gain_to_split: 0.1→0.2 (增加分裂阈值)
#
# 3. 随机性增加：
#    - feature_fraction: 0.8→0.7 (减少特征采样)
#    - bagging_fraction: 0.8→0.7 (减少样本采样)
#    - bagging_freq: 5→3 (增加采样频率)
#
# 4. 训练控制：
#    - learning_rate: 0.05→0.03 (降低学习率)
#    - early_stopping: 100→50 (更早停止)
#    - num_boost_round: 1000→500 (减少最大迭代)
#
# 5. 数据质量：
#    - validation_size: 0.1→0.15 (增加验证集)
#    - winsorize_limits: [0.01,0.01]→[0.02,0.02] (更严格异常值处理)